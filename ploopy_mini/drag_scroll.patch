diff --git a/keyboards/ploopyco/trackball_mini/trackball_mini.c b/keyboards/ploopyco/trackball_mini/trackball_mini.c
index b50850b549..b2d51ceb81 100644
--- a/keyboards/ploopyco/trackball_mini/trackball_mini.c
+++ b/keyboards/ploopyco/trackball_mini/trackball_mini.c
@@ -38,7 +38,7 @@
 #endif

 #define PLOOPY_DPI_OPTIONS { CPI375, CPI750, CPI1375 }
-#define PLOOPY_DPI_DEFAULT 2
+#define PLOOPY_DPI_DEFAULT 1

 #ifndef PLOOPY_DRAGSCROLL_DPI
 #    define PLOOPY_DRAGSCROLL_DPI CPI375 // Fixed-DPI Drag Scroll
@@ -69,6 +69,7 @@ uint16_t lastMidClick = 0;  // Stops scrollwheel from being read if it was press
 uint8_t OptLowPin = OPT_ENC1;
 bool debug_encoder = false;
 bool     is_drag_scroll    = false;
+uint16_t drag_scroll_cnt = 0;

 __attribute__((weak)) void process_wheel_user(report_mouse_t* mouse_report, int16_t h, int16_t v) {
     mouse_report->h = h;
@@ -234,15 +235,22 @@ void pointing_device_task(void) {
     process_mouse(&mouse_report);

     if (is_drag_scroll) {
-        mouse_report.h = mouse_report.x;
+        if (drag_scroll_cnt++ % 3 == 0) {
+            mouse_report.h = mouse_report.x;
 #ifdef PLOOPY_DRAGSCROLL_INVERT
         // Invert vertical scroll direction
-        mouse_report.v = -mouse_report.y;
+            mouse_report.v = -mouse_report.y;
 #else
-        mouse_report.v = mouse_report.y;
+            mouse_report.v = mouse_report.y;
 #endif
-        mouse_report.x = 0;
-        mouse_report.y = 0;
+            mouse_report.x = 0;
+            mouse_report.y = 0;
+        } else {
+            mouse_report.x = 0;
+            mouse_report.y = 0;
+        }
+    } else {
+        drag_scroll_cnt = 0;
     }

     pointing_device_set_report(mouse_report);
